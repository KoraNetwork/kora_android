apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.github.triplet.play'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"

    def versionPropsFile = file('version.properties')

    def code = 1;

    if (versionPropsFile.canRead()) {

        def Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))
        List<String> runTasks = gradle.startParameter.getTaskNames();
        def value = 0
        for (String item : runTasks)
            if (item.contains("assembleProdRelease")) {
                value = 1;
            }
        code = Integer.parseInt(versionProps['VERSION_CODE']).intValue() + value

        versionProps['VERSION_CODE'] = code.toString()
        versionProps.store(versionPropsFile.newWriter(), null)

    } else {
        throw new GradleException("Could not read version.properties!")
    }

    defaultConfig {
        applicationId "com.kora.android"
        minSdkVersion 16
        targetSdkVersion 26
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        versionCode code
        versionName "1.0"

        multiDexEnabled true
    }

    signingConfigs {
        release {
            def propsFile = file('keystore.properties')
            if (propsFile.exists()) {
                def props = new Properties()
                props.load(new FileInputStream(propsFile))
                storeFile file('keystore/release.jks')
                keyAlias = props['keyAlias']
                storePassword = props['storePassword']
                keyPassword = props['keyPassword']
            }
        }

        debug {
            storeFile file('keystore/debug.keystore')
            keyAlias 'androiddebugkey'
            storePassword 'android'
            keyPassword 'android'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            versionNameSuffix "_release"
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            ext.betaDistributionReleaseNotesFilePath =
                    file('../crashlytics_release_notes.txt').absolutePath
        }

        debug {
            signingConfig signingConfigs.debug
            versionNameSuffix "_debug"
            debuggable true
            testCoverageEnabled = false
        }
    }

    productFlavors {
        dev {
            minSdkVersion 21
        }
        prod {
            minSdkVersion 16
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        disable 'MissingTranslation'
        disable 'InvalidPackage'
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'

        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
    }
}

//play {
//    serviceAccountEmail = ""
//    pk12File = file("")
//    // By default publishes to Alpha channel
//    track = 'alpha'
//}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    // android
    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support.constraint:constraint-layout:1.0.2"
    // dagger
    compile "com.google.dagger:dagger:$rootProject.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    // rx
    compile "io.reactivex.rxjava2:rxjava:$rootProject.rxJavaVersion"
    compile "io.reactivex.rxjava2:rxandroid:$rootProject.rxAndroidVersion"
    // butterknife
    compile "com.jakewharton:butterknife:$rootProject.butterKnifeLibVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterKnifeLibVersion"
    //okhttp3
    compile "com.squareup.okhttp3:okhttp:$rootProject.okhttpVersion"
    compile "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttpVersion"
    // logansquare
    compile "com.bluelinelabs:logansquare:$rootProject.logansquareVersion"
    annotationProcessor "com.bluelinelabs:logansquare-compiler:$rootProject.logansquareVersion"
    // retrofit
    compile "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    compile "com.squareup.retrofit2:adapter-rxjava:$rootProject.retrofitVersion"
    compile "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitVersion"
    compile "com.github.aurae.retrofit2:converter-logansquare:1.4.1"
    // shared preferences
    compile 'com.pddstudio:encrypted-preferences:1.3.0'
    // paparazzi
    compile 'com.github.miguelbcr:RxPaparazzo:0.5.4-2.x'
    // glide
    compile "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.glideVersion"
    // web3j
    compile 'org.web3j:core-android:2.2.1'
    //gson
    compile 'com.google.code.gson:gson:2.8.2'
    // date picker
    compile "com.wdullaer:materialdatetimepicker:3.1.1"

    // test
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
}

apply plugin: 'com.google.gms.google-services'